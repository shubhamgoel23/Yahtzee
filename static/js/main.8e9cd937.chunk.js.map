{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Die","className","style","backgroundColor","this","props","locked","onClick","handleClick","val","Component","Dice","dice","map","d","idx","RuleRow","doScore","name","score","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","LargeStraight","Set","size","has","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","largeStraight","yahtzee","chance","ScoreTable","scores","cellSpacing","evt","fullHouse","smallStraight","Game","state","fill","rollsLeft","undefined","roll","bind","setState","st","i","Math","ceil","random","slice","rulename","ruleFn","toggleLocked","disabled","every","x","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9cd937.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\n\nclass Die extends Component {\n  render() {\n    return (\n      <button\n        className={\"Die\"}\n        style={{ backgroundColor: this.props.locked ? \"grey\" : \"black\" }}\n        onClick={this.props.handleClick}\n      >\n        {this.props.val}\n      </button>\n    );\n  }\n}\n\nexport default Die;\n","import React, { Component } from 'react';\nimport Die from './Die';\nimport './Dice.css';\n\nclass Dice extends Component {\n  render() {\n    return <div className=\"Dice\">\n      {this.props.dice.map((d, idx) =>\n        <Die handleClick={this.props.handleClick}\n          val={d}\n          locked={this.props.locked[idx]}\n          idx={idx}\n          key={idx} />\n      )}\n    </div>\n  }\n}\n\nexport default Dice;","import React, { Component } from 'react';\nimport './RuleRow.css'\n\nclass RuleRow extends Component {\n  render() {\n    return (\n      <tr className=\"RuleRow RuleRow-active\" onClick={this.props.doScore}>\n        <td className=\"RuleRow-name\">{this.props.name}</td>\n        <td className=\"RuleRow-score\">{this.props.score}</td>\n      </tr>\n    )\n  }\n}\n\nexport default RuleRow;","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter(d => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = dice => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = dice => {\n    // do any of the counts meet of exceed this distro?\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n\nclass FullHouse {\n  // TODO\n}\n\n/** Check for small straights. */\n\nclass SmallStraight {\n  // TODO\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n\n    // large straight must be 5 different dice & only one can be a 1 or a 6\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = dice => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1 });\nconst twos = new TotalOneNumber({ val: 2 });\nconst threes = new TotalOneNumber({ val: 3 });\nconst fours = new TotalOneNumber({ val: 4 });\nconst fives = new TotalOneNumber({ val: 5 });\nconst sixes = new TotalOneNumber({ val: 6 });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({ count: 3 });\nconst fourOfKind = new SumDistro({ count: 4 });\n\n// full house scores as flat 25\nconst fullHouse = \"TODO\";\n\n// small/large straights score as 30/40\nconst smallStraight = \"TODO\";\nconst largeStraight = new LargeStraight({ score: 40 });\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({ score: 50 });\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0 });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n};\n","import React, { Component } from 'react';\nimport RuleRow from './RuleRow';\nimport './ScoreTable.css';\nimport { ones, twos, threes, fours, fives, sixes, threeOfKind, fourOfKind, fullHouse, smallStraight, largeStraight, yahtzee, chance } from './Rules';\n\n\nclass ScoreTable extends Component {\n\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className=\"ScoreTable\">\n        <section className=\"ScoreTable-section\">\n          <h2>Upper</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow name=\"Ones\" score={scores.ones} doScore={evt => doScore(\"ones\", ones.evalRoll)} />\n              <RuleRow name=\"Twos\" score={scores.twos} doScore={evt => doScore(\"twos\", twos.evalRoll)} />\n              <RuleRow name=\"Threes\" score={scores.threes} doScore={evt => doScore(\"threes\", threes.evalRoll)} />\n              <RuleRow name=\"Fours\" score={scores.fours} doScore={evt => doScore(\"fours\", fours.evalRoll)} />\n              <RuleRow name=\"Fives\" score={scores.fives} doScore={evt => doScore(\"fives\", fives.evalRoll)} />\n              <RuleRow name=\"Sixes\" score={scores.sixes} doScore={evt => doScore(\"sixes\", sixes.evalRoll)} />\n            </tbody>\n          </table>\n        </section>\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\n          <h2>Lower</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow name=\"Three of Kind\" score={scores.threeOfKind} doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)} />\n              <RuleRow name=\"Four of Kind\" score={scores.fourOfKind} doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)} />\n              <RuleRow name=\"Full House\" score={scores.fullHouse} doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)} />\n              <RuleRow name=\"Small Straight\" score={scores.smallStraight} doScore={evt => doScore(\"smallStraight\", smallStraight.evalRoll)} />\n              <RuleRow name=\"Large Straight\" score={scores.largeStraight} doScore={evt => doScore(\"largeStraight\", largeStraight.evalRoll)} />\n              <RuleRow name=\"Yahtzee\" score={scores.yahtzee} doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)} />\n              <RuleRow name=\"Chance\" score={scores.chance} doScore={evt => doScore(\"chance\", chance.evalRoll)} />\n            </tbody>\n          </table>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default ScoreTable;","import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1\n    }));\n  }\n\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    this.setState(st => ({\n      locked: [\n        ...st.locked.slice(0, idx),\n        !st.locked[idx],\n        ...st.locked.slice(idx + 1)\n      ]\n    }));\n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.roll();\n  }\n\n  render() {\n    return (\n      <div className='Game'>\n        <header className='Game-header'>\n          <h1 className='App-title'>Yahtzee!</h1>\n\n          <section className='Game-dice-section'>\n            <Dice\n              dice={this.state.dice}\n              locked={this.state.locked}\n              handleClick={this.toggleLocked}\n            />\n            <div className='Game-button-wrapper'>\n              <button\n                className='Game-reroll'\n                disabled={this.state.locked.every(x => x)}\n                onClick={this.roll}\n              >\n                {this.state.rollsLeft} Rerolls Left\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={this.state.scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}