{"version":3,"sources":["Die.js","Dice.js","RuleRow.js","Rules.js","ScoreTable.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["Die","props","handleClick","bind","this","idx","numberWords","locked","val","disabled","rolling","classes","className","onClick","Component","defaultProps","Dice","dice","map","d","RuleRow","score","name","doScore","description","undefined","Rule","params","Object","assign","reduce","prev","curr","freqs","Map","set","get","Array","from","values","filter","length","TotalOneNumber","evalRoll","count","SumDistro","freq","some","c","sum","FullHouse","includes","SmallStraight","Set","has","LargeStraight","size","Yahtzee","ones","twos","threes","fours","fives","sixes","threeOfKind","fourOfKind","fullHouse","smallStraight","largeStraight","yahtzee","chance","ScoreTable","scores","totalScore","key","cellSpacing","evt","getTotalScore","Game","state","fill","rollsLeft","roll","toggleLocked","animateRoll","setState","setTimeout","st","i","Math","ceil","random","slice","rulename","ruleFn","every","x","displayRollInfo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2562f906.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Die.css\";\n\nclass Die extends Component {\n  static defaultProps = {\n    numberWords: [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\"],\n    val:1\n  };\nconstructor(props){\n  super(props);\n  this.handleClick=this.handleClick.bind(this);\n}\n\nhandleClick(){\n  this.props.handleClick(this.props.idx);\n}\n\n  render() {\n    const { numberWords, locked, val, disabled, rolling} = this.props;\n    let classes = `Die fas fa-dice-${numberWords[val - 1]} fa-5x `;\n    if(locked) classes += 'Die-locked '\n    if(rolling && !locked) classes += 'Die-rolling '\n    return (\n      <i className={classes} onClick={this.handleClick} disabled={disabled}/>\n    );\n  }\n}\n\nexport default Die;\n","import React, { Component } from 'react';\nimport Die from './Die';\nimport './Dice.css';\n\nclass Dice extends Component {\n  render() {\n    return <div className=\"Dice\">\n      {this.props.dice.map((d, idx) =>\n        <Die handleClick={this.props.handleClick}\n          val={d}\n          locked={this.props.locked[idx]}\n          idx={idx}\n          key={idx} \n          disabled = {this.props.disabled}\n          rolling={this.props.rolling}\n          />\n      )}\n    </div>\n  }\n}\n\nexport default Dice;","import React, { Component } from 'react';\nimport './RuleRow.css'\n\nclass RuleRow extends Component {\n  render() {\n    const {score, name, doScore, description} = this.props;\n    const disabled = score!==undefined;\n    return (\n      <tr className={`RuleRow RuleRow-${!disabled ? \"active\" : \"disabled\"}`} \n      onClick={!disabled ? doScore : null}\n      >\n        <td className=\"RuleRow-name\">{name}</td>\n        <td className=\"RuleRow-score\">{!disabled ? description : score}</td>\n      </tr>\n    )\n  }\n}\n\nexport default RuleRow;","/** Rule for Yahtzee scoring.\n *\n * This is an \"abstract class\"; the real rules are subclasses of these.\n * This stores all parameters passed into it as properties on the instance\n * (to simplify child classes so they don't need constructors of their own).\n *\n * It contains useful functions for summing, counting values, and counting\n * frequencies of dice. These are used by subclassed rules.\n */\n\nclass Rule {\n  constructor(params) {\n    // put all properties in params on instance\n    Object.assign(this, params);\n  }\n\n  sum(dice) {\n    // sum of all dice\n    return dice.reduce((prev, curr) => prev + curr);\n  }\n\n  freq(dice) {\n    // frequencies of dice values\n    const freqs = new Map();\n    for (let d of dice) freqs.set(d, (freqs.get(d) || 0) + 1);\n    return Array.from(freqs.values());\n  }\n\n  count(dice, val) {\n    // # times val appears in dice\n    return dice.filter(d => d === val).length;\n  }\n}\n\n/** Given a sought-for val, return sum of dice of that val.\n *\n * Used for rules like \"sum of all ones\"\n */\n\nclass TotalOneNumber extends Rule {\n  evalRoll = dice => {\n    return this.val * this.count(dice, this.val);\n  };\n}\n\n/** Given a required # of same dice, return sum of all dice.\n *\n * Used for rules like \"sum of all dice when there is a 3-of-kind\"\n */\n\nclass SumDistro extends Rule {\n  evalRoll = dice => {\n    // do any of the counts meet of exceed this distro?\n    return this.freq(dice).some(c => c >= this.count) ? this.sum(dice) : 0;\n  };\n}\n\n/** Check if full house (3-of-kind and 2-of-kind) */\n\nclass FullHouse extends Rule{\n  evalRoll = (dice)=> {\n    const freqs = this.freq(dice);\n    return freqs.includes(2) && freqs.includes(3) ? this.score : 0;\n  }\n}\n\n/** Check for small straights. */\n// \nclass SmallStraight extends Rule{\n  evalRoll = (dice) =>{\n    const d = new Set(dice);\n    // straight can be 234 + either 1 or 5\n    if (d.has(2) && d.has(3) && d.has(4) && (d.has(1) || d.has(5)))\n      return this.score;\n\n    // or 345 + either 2 or 6\n    if (d.has(3) && d.has(4) && d.has(5) && (d.has(2) || d.has(6)))\n      return this.score;\n\n    return 0;\n\n  }\n}\n\n/** Check for large straights. */\n\nclass LargeStraight extends Rule {\n  evalRoll = dice => {\n    const d = new Set(dice);\n\n    // large straight must be 5 different dice & only one can be a 1 or a 6\n    return d.size === 5 && (!d.has(1) || !d.has(6)) ? this.score : 0;\n  };\n}\n\n/** Check if all dice are same. */\n\nclass Yahtzee extends Rule {\n  evalRoll = dice => {\n    // all dice must be the same\n    return this.freq(dice)[0] === 5 ? this.score : 0;\n  };\n}\n\n// ones, twos, etc score as sum of that value\nconst ones = new TotalOneNumber({ val: 1, description: \"1 point per 1\" });\nconst twos = new TotalOneNumber({ val: 2, description: \"2 points per 2\" });\nconst threes = new TotalOneNumber({ val: 3, description: \"3 points per 3\" });\nconst fours = new TotalOneNumber({ val: 4, description: \"4 points per 4\" });\nconst fives = new TotalOneNumber({ val: 5, description: \"5 points per 5\" });\nconst sixes = new TotalOneNumber({ val: 6, description: \"6 points per 6\" });\n\n// three/four of kind score as sum of all dice\nconst threeOfKind = new SumDistro({ count: 3, description: \"Sum of all dice if 3 are same\" });\nconst fourOfKind = new SumDistro({ count: 4, description: \"Sum of all dice if 4 are same\" });\n\n// full house scores as flat 25\nconst fullHouse = new FullHouse({ score: 25, description: \"25 points for full house\" });\n\n// small/large straights score as 30/40\nconst smallStraight = new SmallStraight({ score: 30, description: \"30 points for small straight\" });\nconst largeStraight = new LargeStraight({ score: 40, description: \"40 points for small straight\" });\n\n// yahtzee scores as 50\nconst yahtzee = new Yahtzee({ score: 50, description: \"50 points for Yahtzee\" });\n\n// for chance, can view as some of all dice, requiring at least 0 of a kind\nconst chance = new SumDistro({ count: 0, description: \"Sum of all the dice\" });\n\nexport {\n  ones,\n  twos,\n  threes,\n  fours,\n  fives,\n  sixes,\n  threeOfKind,\n  fourOfKind,\n  fullHouse,\n  smallStraight,\n  largeStraight,\n  yahtzee,\n  chance\n};\n","import React, { Component } from 'react';\nimport RuleRow from './RuleRow';\nimport './ScoreTable.css';\nimport { ones, twos, threes, fours, fives, sixes, threeOfKind, fourOfKind, fullHouse, smallStraight, largeStraight, yahtzee, chance } from './Rules';\n\n\nclass ScoreTable extends Component {\n\n  getTotalScore(){\n    const {scores} = this.props;\n    let totalScore = 0;\n    for (let key in scores){\n      if(scores[key]) totalScore += scores[key];\n    } \n    return totalScore;\n  }\n\n  render() {\n    const { scores, doScore } = this.props;\n\n    return (\n      <div className=\"ScoreTable\">\n        <section className=\"ScoreTable-section\">\n          <h2>Upper</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow \n                name=\"Ones\" \n                score={scores.ones} \n                description={ones.description} \n                doScore={evt => doScore(\"ones\", ones.evalRoll)} \n              />\n              <RuleRow \n                name=\"Twos\" \n                score={scores.twos} \n                description={twos.description} \n                doScore={evt => doScore(\"twos\", twos.evalRoll)} \n              />\n              <RuleRow \n                name=\"Threes\" \n                score={scores.threes} \n                description={threes.description} \n                doScore={evt => doScore(\"threes\", threes.evalRoll)} \n              />\n              <RuleRow \n                name=\"Fours\" \n                score={scores.fours} \n                description={fours.description} \n                doScore={evt => doScore(\"fours\", fours.evalRoll)} \n              />\n              <RuleRow \n                name=\"Fives\" \n                score={scores.fives} \n                description={fives.description} \n                doScore={evt => doScore(\"fives\", fives.evalRoll)} \n              />\n              <RuleRow \n                name=\"Sixes\" \n                score={scores.sixes} \n                description={sixes.description} \n                doScore={evt => doScore(\"sixes\", sixes.evalRoll)} \n              />\n            </tbody>\n          </table>\n        </section>\n        <section className=\"ScoreTable-section ScoreTable-section-lower\">\n          <h2>Lower</h2>\n          <table cellSpacing=\"0\">\n            <tbody>\n              <RuleRow \n                name=\"Three of Kind\" \n                score={scores.threeOfKind} \n                description={threeOfKind.description} \n                doScore={evt => doScore(\"threeOfKind\", threeOfKind.evalRoll)} \n              />\n              <RuleRow \n                name=\"Four of Kind\" \n                score={scores.fourOfKind} \n                description={fourOfKind.description} \n                doScore={evt => doScore(\"fourOfKind\", fourOfKind.evalRoll)} \n              />\n              <RuleRow \n                name=\"Full House\" \n                score={scores.fullHouse} \n                description={fullHouse.description} \n                doScore={evt => doScore(\"fullHouse\", fullHouse.evalRoll)} \n              />\n              <RuleRow \n                name=\"Small Straight\" \n                score={scores.smallStraight} \n                description={smallStraight.description} \n                doScore={evt => doScore(\"smallStraight\", smallStraight.evalRoll)} \n              />\n              <RuleRow \n                name=\"Large Straight\" \n                score={scores.largeStraight} \n                description={largeStraight.description} \n                doScore={evt => doScore(\"largeStraight\", largeStraight.evalRoll)} \n              />\n              <RuleRow \n                name=\"Yahtzee\" \n                score={scores.yahtzee} \n                description={yahtzee.description} \n                doScore={evt => doScore(\"yahtzee\", yahtzee.evalRoll)} \n              />\n              <RuleRow \n                name=\"Chance\" \n                score={scores.chance} \n                description={chance.description} \n                doScore={evt => doScore(\"chance\", chance.evalRoll)} \n              />\n            </tbody>\n          </table>\n        </section>\n        <h2>Total Score: {this.getTotalScore()}</h2>\n      </div>\n    )\n  }\n}\n\nexport default ScoreTable;","import React, { Component } from \"react\";\nimport Dice from \"./Dice\";\nimport ScoreTable from \"./ScoreTable\";\nimport \"./Game.css\";\n\nconst NUM_DICE = 5;\nconst NUM_ROLLS = 3;\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dice: Array.from({ length: NUM_DICE }).map(d=>6),\n      locked: Array(NUM_DICE).fill(false),\n      rollsLeft: NUM_ROLLS,\n      rolling: false,\n      scores: {\n        ones: undefined,\n        twos: undefined,\n        threes: undefined,\n        fours: undefined,\n        fives: undefined,\n        sixes: undefined,\n        threeOfKind: undefined,\n        fourOfKind: undefined,\n        fullHouse: undefined,\n        smallStraight: undefined,\n        largeStraight: undefined,\n        yahtzee: undefined,\n        chance: undefined\n      }\n    };\n    this.roll = this.roll.bind(this);\n    this.doScore = this.doScore.bind(this);\n    this.toggleLocked =this.toggleLocked.bind(this);\n    this.animateRoll = this.animateRoll.bind(this);\n  }\n\n  componentDidMount(){\n    this.animateRoll();\n  }\n\n  animateRoll(){\n    this.setState({rolling:true}, ()=>{\n      setTimeout(this.roll, 1000);\n    })\n  }\n\n  roll(evt) {\n    // roll dice whose indexes are in reroll\n    this.setState(st => ({\n      dice: st.dice.map((d, i) =>\n        st.locked[i] ? d : Math.ceil(Math.random() * 6)\n      ),\n      locked: st.rollsLeft > 1 ? st.locked : Array(NUM_DICE).fill(true),\n      rollsLeft: st.rollsLeft - 1,\n      rolling: false\n    }));\n  }\n\n  toggleLocked(idx) {\n    // toggle whether idx is in locked or not\n    if(this.state.rollsLeft>0 && !this.state.rolling){\n      this.setState(st => ({\n        locked: [\n          ...st.locked.slice(0, idx),\n          !st.locked[idx],\n          ...st.locked.slice(idx + 1)\n        ]\n      }));\n    }\n    \n  }\n\n  doScore(rulename, ruleFn) {\n    // evaluate this ruleFn with the dice and score this rulename\n    this.setState(st => ({\n      scores: { ...st.scores, [rulename]: ruleFn(this.state.dice) },\n      rollsLeft: NUM_ROLLS,\n      locked: Array(NUM_DICE).fill(false)\n    }));\n    this.animateRoll();\n  }\n\n  displayRollInfo(){\n    const messages = [\n      \"0 Rolls Left\",\n      \"1 Roll Left\",\n      \"2 Rolls Left\",\n      \"Starting Round\"\n    ]\n    return messages[this.state.rollsLeft]\n  }\n\n  render() {\n    const {dice, locked, rollsLeft, rolling, scores} = this.state;\n    return (\n      <div className='Game'>\n        <header className='Game-header'>\n          <h1 className='App-title'>Yahtzee!</h1>\n\n          <section className='Game-dice-section'>\n            <Dice\n              dice={dice}\n              locked={locked}\n              handleClick={this.toggleLocked}\n              disabled={rollsLeft===0}\n              rolling={rolling}\n            />\n            <div className='Game-button-wrapper'>\n              <button\n                className='Game-reroll'\n                disabled={locked.every(x => x) || rollsLeft===0 || rolling}\n                onClick={this.animateRoll}\n              >\n                {this.displayRollInfo()}\n              </button>\n            </div>\n          </section>\n        </header>\n        <ScoreTable doScore={this.doScore} scores={scores} />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from \"react\";\nimport Game from \"./Game\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='App'>\n        <Game />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"@fortawesome/fontawesome-free/css/all.css\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}